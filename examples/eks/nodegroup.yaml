apiVersion: eks.aws.upbound.io/v1beta1
kind: NodeGroup
metadata:
  name: sample-eks-ng
spec:
  forProvider:
    region: us-west-1
    clusterNameRef: 
      name: sample-eks-cluster
    nodeRoleArnRef:
      name: sample-node-role
    subnetIdRefs:
      - name: sample-subnet1
      - name: sample-subnet2
    scalingConfig:
      - minSize: 1
        maxSize: 1
        desiredSize: 1

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: Role
metadata:
  name: sample-node-role
spec:
  forProvider:
    assumeRolePolicy: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Principal": {
              "Service": "ec2.amazonaws.com"
            },
            "Action": "sts:AssumeRole"
          }
        ]
      }

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: RolePolicyAttachment
metadata:
  name: sample-node-policy
spec:
  forProvider:
    policyArn: arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
    roleRef:
      name: sample-node-role

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: RolePolicyAttachment
metadata:
  name: sample-node-policy-2
spec:
  forProvider:
    policyArn: arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
    roleRef:
      name: sample-node-role

---

apiVersion: iam.aws.upbound.io/v1beta1
kind: RolePolicyAttachment
metadata:
  name: sample-node-policy-3
spec:
  forProvider:
    policyArn: arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
    roleRef:
      name: sample-node-role